name: On Project Card Moved

on:
    project_card:
        types: [moved]

jobs:
    to-in-progress:
        runs-on: ubuntu-latest
        container: salesforce/salesforcedx
        if: contains(github.event.project_card.column_id, '7135609')

        steps:
            - uses: actions/checkout@v1

            - name: Populate jwt key file
              run: openssl enc -nosalt -aes-256-cbc -d -in .github/server.key.enc -out .github/server.key -base64 -K ${{ secrets.DECRYPTION_KEY }} -iv ${{ secrets.DECRYPTION_IV }}

            - name: Show debug
              run: sfdx --dev-debug

            - name: Make condif dir
              run: test -d /github/home/.config || mkdir /github/home/.config

            - name: Make sfdx dir
              run: test -d /github/home/.config/sfdx || mkdir /github/home/.config/sfdx

            - name: Add analytics plugins
              run: echo '["@salesforce/plugin-analytics"]' > /github/home/.config/sfdx/unsignedPluginWhiteList.json && sfdx plugins:install analytics 

            - name: Authenticate against dev hub
              run: sfdx force:auth:jwt:grant --clientid ${{ secrets.CONSUMERKEY }} --jwtkeyfile .github/server.key --username ${{ secrets.USERNAME }} --setdefaultdevhubusername -a devhub

            - name: Generate Username
              id: generate_username
              run: scripts/generateEmailFromContentUrl.sh ${{ github.event.project_card.content_url }}

            - name: Initialize scratch org
              # Generate username from repo and have it in an action so it isn't copied and pasted in scripts
              run: scripts/orgInit.sh ${{ steps.generate_username.outputs.username }}

            - name: Send Email
              run: scripts/sendEmail.sh

    to-ready-for-review:
        runs-on: ubuntu-latest
        container: salesforce/salesforcedx
        if: contains(github.event.project_card.column_id, '7135613')

        steps:
            - uses: actions/checkout@v1

            - name: Populate jwt key file
              run: openssl enc -nosalt -aes-256-cbc -d -in .github/server.key.enc -out .github/server.key -base64 -K ${{ secrets.DECRYPTION_KEY }} -iv ${{ secrets.DECRYPTION_IV }}

            - name: Generate Username
              id: generate_username
              run: scripts/generateEmailFromContentUrl.sh ${{ github.event.project_card.content_url }}

            - name: Authenticate scratch org
              run: sfdx force:auth:jwt:grant --clientid ${{ secrets.CONSUMERKEY }} --jwtkeyfile .github/server.key --username ${{ steps.generate_username.outputs.username }} --setdefaultusername -a scratch-org -r https://test.salesforce.com

            - name: Retrieve metadata changes
              run: sfdx force:source:retrieve --manifest=manifest/package.xml --targetusername=scratch-org

            - name: Commit Git changes
              shell: bash
              run: |
                  git config --local user.email "action@github.com"
                  git config --local user.name "GitHub Action"
                  git checkout -b branch/${{ steps.generate_username.outputs.issue_number }}
                  git add -A
                  git commit -m "Add new changes from scratch org"

            - name: Push changes
              uses: vazexqi/github-push-action@master
              with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  branch: ${{ format('branch/{0}', steps.generate_username.outputs.issue_number) }}
                  force: true

            - name: Create a PR
              uses: vazexqi/salesforcedx-kanban-actions/pulls-create-pr@master
              with:
                  token: ${{ secrets.GITHUB_TOKEN}}
                  owner: ${{ github.event.repository.owner.login }}
                  repo: ${{ github.event.repository.name }}
                  title: ${{ format('Changes from Issue {0}', steps.generate_username.outputs.issue_number)}}
                  body: ${{ format('Changes from \#{0}', steps.generate_username.outputs.issue_number)}}
                  head: ${{ format('branch/{0}', steps.generate_username.outputs.issue_number)}}
                  base: master
